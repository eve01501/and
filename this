Exp1:

SQL> CREATE TABLE BRANCH(
 2 BRANCH_ID VARCHAR(10),
 3 BANK_NAMEVARCHAR(15),
 4 BRANCH_NAMEVARCHAR(20),
 5 ASSETSINT NOTNULL,
 6 PRIMARYKEY(BRANCH_ID)
 7 );
 Table created.

 SQL> CREATE TABLE CUSTOMER(
 2 CUSTOMER_IDVARCHAR(10),
 3 CUSTOMER_NAMEVARCHAR(20),
 4 CUSTOMER_AGEINT,
 5 CUSTOMER_ADDRESSVARCHAR(20),
 6 CUSTOMER_PHONEINT,
 7 PRIMARYKEY(CUSTOMER_ID)
 8 );

 SQL> CREATE TABLE ACCOUNT(
 2 ACC_NOINT,
 3 BRANCH_ID VARCHAR(10),
 4 ACCOUNT_TYPEVARCHAR(10),
 5 ACCOUNT_BALANCEINT,
 6 CUSTOMER_IDVARCHAR(10),
 VARCHAR2(20)
 NUMBER(38)
7 PRIMARYKEY(ACC_NO),
 8 FOREIGNKEY(BRANCH_ID) REFERENCES BRANCH(BRANCH_ID) ON DELETE
 CASCADE,
 9 FOREIGNKEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON
 DELETE CASCADE
 10 );

 SQL> CREATE TABLE LOAN(
 2 LOAN_NUMBERVARCHAR2(5),
 3 BRANCH_ID VARCHAR(10),
 4 AMOUNTINT,
 5 CUSTOMER_IDVARCHAR(10),
 6 PRIMARYKEY(LOAN_NUMBER),
 VARCHAR2(10)
 VARCHAR2(10)
 NUMBER(38)
 VARCHAR2(10)
 7 FOREIGNKEY(BRANCH_ID) REFERENCES BRANCH(BRANCH_ID) ON DELETE
 CASCADE,
 8 FOREIGNKEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON
 DELETE CASCADE);

 QUERY1
 Findall thecustomerswhohaveat leastoneaccountat the“Mangaluru”branch.
 SELECTC.CUSTOMER_ID,C.CUSTOMER_NAMEFROMCUSTOMERC,ACCOUNT
 A,BRANCHB
 WHEREB.BRANCH_NAME='MANGALURU'ANDB.BRANCH_ID=A.BRANCH_ID
 ANDA.CUSTOMER_ID=C.CUSTOMER_ID;

 QUERY2
 Findall thecustomerswhohaveanaccountatall thebrancheslocatedinaspecificcity.
 SQL>SELECTC.CUSTOMER_ID,C.CUSTOMER_NAME,A.ACCOUNT_BALANCEFROM
 CUSTOMERC,ACCOUNTA
 WHEREC.CUSTOMER_ID=A.CUSTOMER_IDAND
 ACCOUNT_BALANCE=(SELECTMAX(ACCOUNT_BALANCE)FROMACCOUNT);

 SQL>SELECTC.CUSTOMER_NAMEC,L.AMOUNTFROMCUSTOMERC,LOANL
 WHEREC.CUSTOMER_ID=L.CUSTOMER_IDANDAMOUNT>500000;

 SQL>SELECTBANK_NAME,BRANCH_NAME,ASSETSFROMBRANCH
 2WHEREASSETS=(SELECTMAX(ASSETS)FROMBRANCH)
 3UNION
 4SELECTBANK_NAME,BRANCH_NAME,ASSETSFROMBRANCH
 5WHEREASSETS=(SELECTMIN(ASSETS)FROMBRANCH)
 6 ;

 DELETEFROMBRANCHWHEREBRANCH_NAME='DELHI'

----------------------------------------------------------------------
Exp2:

CREATE TABLE PUBLISHER(
 NAMEVARCHAR2(20) PRIMARY KEY,
 ADDRESS VARCHAR2(20),
 PHONENUMBER(10));

CREATE TABLE BOOK(
 BOOK_ID VARCHAR2(20) PRIMARY KEY,
 TITLE VARCHAR2(40),
 PUBLISHER_NAME VARCHAR2(20) references
 PUBLISHER(NAME) on delete cascade,
 PUB_YEAR INT);

 CREATE TABLE BOOK_AUTHORS(
 BOOK_ID varchar(20),
 AUTHOR_NAMEVARCHAR2(20),
 PRIMARY KEY(BOOK_ID, AUTHOR_NAME),
 FOREIGN KEY(BOOK_ID) REFERENCES BOOK
 ONDELETECASCADE);

CREATE TABLE LIBRARY_PROGRAMME(
 PROGRAMME_ID VARCHAR(20) PRIMARY KEY,
 PROGRAMME_NAMEVARCHAR(10),
ADDRESS VARCHAR(20));

 CREATE TABLE BOOK_COPIES(
 BOOK_ID VARCHAR(20)
 REFERENCES BOOK(BOOK_ID)
 ONDELETECASCADE,
 PROGRAMME_ID VARCHAR(20)
 REFERENCES
 LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE CASCADE,
 NO_OF_COPIES NUMBER(3),
 primary key(BOOK_ID, PROGRAMME_ID));

 CREATE TABLE BOOK_LENDING(
 BOOK_ID VARCHAR(20),
 PROGRAMME_ID VARCHAR(20),
 CARD_NOVARCHAR(20),
 DATE_OUT DATE,
 DUE_DATE DATE,
 PRIMARY KEY(PROGRAMME_ID, BOOK_ID, CARD_NO),
 FOREIGN KEY(BOOK_ID)
 REFERENCES book(BOOK_ID) ON DELETE CASCADE,
 FOREIGN KEY(PROGRAMME_ID)
 REFERENCES LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE
 CASCADE,
 CONSTRAINT CK1 CHECK (DUE_DATE > DATE_OUT));

 QUERY1:
 SELECTb.book_id, lp.programme_id,
 b.title,b.publisher_name,bc.no_of_copies,
 a.author_name
 FROMbookb,book_authorsa,book_copiesbc,
 library_programmelp
 WHEREb.book_id=a.book_idAND
 b.book_id=bc.book_idAND
 bc.programme_id=lp.programme_id;
 OR
 selectb.book_id, title,publisher_name,author_name,no_of_copies
 frombookb,book_authorsa,book_copiesbc
 whereb.book_id=bc.book_idAND
 b.book_id=a.book_id;

 QUERY2:
 L1
 L2
 L2
 L2
 L1
 L2
 DBMS
 DBMS
 DBMS
 DBMS
 AIML
 AIML
 Pearson
 Pearson
 Pearson
 Pearson
 TataMcGraw
 TataMcGraw
 SQL> SELECT card_no FROM book_lending
 2 WHEREdate_out
 3 BETWEEN'01-JAN-2023'
 4 AND'30-JUN-2023'
 5 GROUPBYcard_no
 6 HAVINGCOUNT(*) >= 3 ;

 QUERY3:
 100 Ramakrishnan
 100 Navathe
 100 Elmarsi
 99 Elaine
 100 Elaine
 Delete a book in BOOK table. Update the contents
 of other tables to reflect this data manipulation operation.
 DELETE FROMbook WHEREbook_id = &bid;
 Enter : 'B103';

 CREATE TABLE BOOK1 (
 BOOK_ID VARCHAR2(20) PRIMARY KEY,
 TITLE VARCHAR2(40),
 PUBLISHER_NAME VARCHAR2(20) references
 PUBLISHER(NAME) on delete cascade,
 PUB_YEAR INT)
 PARTITION BY RANGE(pub_year)
 (PARTITION p1 VALUES LESS THAN(2001),
 PARTITION p2 VALUES LESS THAN(2005),
 PARTITION P3 VALUES LESS THAN (2010),
PARTITION P4 VALUES LESS THAN(MAXVALUE));

 QUERY5:
 SQL> Create view available_book
 As
 Select b.book_id, b.title,
 Pearson
 sum(bc.no_of_copies)- (select count(*) from book_lending
 bl where bl.book_id= b. book_id group by bl.book_id)
 as books_available from book b, book_copies bc where
 b.book_id=bc.book_id group by b.book_id,b.title;

----------------------------------------------------------------------------

Exp3:

CREATE TABLE STUDENT
 ( USN VARCHAR2(20),
 SNAME VARCHAR2(10),
 ADDRESS VARCHAR2(10),
 PHONE NUMBER(10),
 GENDER VARCHAR2(10),
 PRIMARY KEY(USN));


 CREATE TABLE SEMSEC
 ( SSID NUMBER(5),
 SEM NUMBER(2),
 SECTION VARCHAR2(1),
 PRIMARY KEY(ssid));


 CREATE TABLE CLASS
 ( SSID NUMBER(5),
 USN VARCHAR2(20),
 PRIMARY KEY(USN),
 FOREIGN KEY(ssid) REFERENCES semsec(ssid),
 FOREIGN KEY(USN) REFERENCES student(USN));


 CREATE TABLE SUBJECT
 ( SUBCODE VARCHAR2(7) PRIMARY KEY,
 TITLE VARCHAR2(20),
 SEMNUMBER(4),
 credit NUMBER(2));


 CREATE TABLE IAMARKS
 ( USN VARCHAR2(20),
 SSID NUMBER(5),
 number(5),
 SUBCODEVARCHAR2(7),
 TEST1 NUMBER(3),
 TEST2 NUMBER(3),
 TEST3 NUMBER(3),
 FINALIA NUMBER(3),
 PRIMARY KEY(USN,SUBCODE,SSID),
 FOREIGN KEY(USN) REFERENCES STUDENT(USN),
 FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE),
 FOREIGN KEY(SSID) REFERENCES SEMSEC(SSID));

QUERY1:
 SQL>SELECTA.*,B.SEM,B.SECTIONFROMSTUDENTA,SEMSECB,CLASSCWHERE
 A.USN=C.USNANDB.SSID=C.SSID
 2ANDB.SEM=4ANDB.SECTION='C';

 QUERY2:
 4 C
 SQL> SELECT sem,section,gender,count(*) FROM student s, semsec s1,class c WHERE
 s.usn=c.usn AND s1.s
 sid=c.ssid GROUP BY (gender,sem,section) ORDER BY(sem);

QUERY3:
 1
 1
 1
 1
 SQL> CREATE VIEW internal2 AS SELECT
 usn,s.subcode,title,TESTT1 FROM subject s,
 iamarks i WHERE i.subcode=s.subcode
 and i.usn='4SF20CD001';
 View created.
 OR
 SQL> CREATEVIEWTEST_MARKS
 AS SELECT SUBCODE,TESTT1 FROMIAMARKS
 WHEREUSN='4SF20CD001';
 View created.

QUERY4:
 TESTT1
 38
 28
SQL>UPDATEiamarksSET
 finalia=GREATEST((testT1+test2),
 (testT1+test3),(test3+test2))/2;

Query5:
 SQL>SELECTusn,finalia,
 2 CASE
 3WHENfinaliaBETWEEN45AND50THEN'outstanding'
 4WHENfinaliaBETWEEN40AND45THEN'GOOD'
 5WHENfinaliaBETWEEN30AND40THEN'AVERAGE'
 6WHENfinalia<30THEN'weak'
 7END
 8 ASCATEGORYFROMiamarksi,
 semsecsWHEREi.ssid=s.ssid
 ANDsem=8ANDsectionIN('A','B','C');

---------------------------------------------------------------------

exp4:

 SQL> CREATE TABLE employee(
 2 Eid INT PRIMARY KEY,
 3 nameVARCHAR2(20),
 4 address VARCHAR2(20),
 5 Gender CHAR(1) CHECK(Gender ='M' OR Gender ='F'),
 6 salary NUMBER(6),
 7 SuperEid REFERENCES EMPLOYEE(Eid),
 8 dnoNUMBER);

 Table created.
 SQL> INSERT INTO employee VALUES(1, 'Rahul' , 'Mangaluru', 'M',35000,1,NULL);
 1 row created.
 SQL> INSERT INTO employee VALUES(2, 'Sahana', 'Mangaluru', 'F',35000,1,NULL);
 1 row created.
SQL> INSERT INTO employee VALUES(3, 'Sagar', 'Bengaluru', 'M',35000,1,NULL);
 1 row created.
 SQL> INSERT INTO employee VALUES(4, 'Sagarik', 'Mangaluru', 'M',35000,1,NULL);
 1 row created.
 SQL> INSERT INTO employee VALUES(5, 'Sajaan', 'Mysore', 'M',600000,1,NULL);

 SQL> CREATE TABLE department (
 2 DnumNUMBER(5) PRIMARY KEY,
 3 dnameVARCHAR2(10) ,
 4 Dmgr_id REFERENCES employee(Eid),
 5 Mgr_start_date date);

 Table created.
 SQL> INSERT INTO department VALUES(1,'CSE',1,'2-Nov-2007');
 1 row created.
 SQL> INSERT INTO department VALUES(2,'IOT',2,'2-Nov-2007');
 1 row created.
 SQL> INSERT INTO department VALUES(3,'Account',2,'2-Nov-2017');
 1 row created.
 SQL> INSERT INTO department VALUES(4,'ISE',1,'2-Nov-2000');
 1 row created.
 SQL> INSERT INTO department VALUES(5,'Finance',1,'3-Nov-2001');
 1 row created.

 ALTER TABLE employee ADD CONSTRAINT fk FOREIGN KEY(dno) REFERENCES
 department(Dnum);

 Table altered.

UPDATE employee
 SET dno=4
 where eid=1;
 UPDATE employee
 SET dno=1
 where eid=2;
 UPDATE employee
 SET dno=3
 where eid=3;
 UPDATE employee
 SET dno=3
 where eid=4;
 UPDATE employee
 SET dno=3
 where eid=5;
 SQL> SELECT * FROMEMPLOYEE;

 EID NAME
 ADDRESS--------------------------------------------------------------------------------
1 Rahul
 Mangaluru
 2 Sahana
 3 Sagar
 4 Sagarik
 5 Sajaan
 Mangaluru
 Bengaluru
 Mangaluru
 Mysore

 SQL> SELECT * FROMDEPARTMENT;

 DNUMDNAME
 G SALARY SUPEREID DNO
 M 35000
 F 35000
 M 35000
 M 35000
 M 600000
 DMGR_ID MGR_START--------------------------------------
1 CSE
 1 02-NOV-07
 2 IOT
 3 Account
 4 ISE
 2 02-NOV-07
 2 02-NOV-17
 1
 1
 1
 1
 1
 4
 1
 3
 3
 3
 1 02-NOV-00
5 Finance
 1 03-NOV-01

 SQL> CREATE TABLE dlocation
 2 (dno REFERENCES department(dnum),
 3 location VARCHAR2(10),
 4 PRIMARYKEY(dno,location));

 SQL> INSERT INTO dlocation VALUES(1,'Mangaluru');
 SQL> SELECT * FROMDLOCATION;
 DNOLOCATION--------------------
 1 Mangaluru
 1 Mysore
 2 Mangaluru
 3 Bengaluru
 4 Mangaluru
 5 Mangaluru

 SQL> CREATE TABLE project(
 2 PnumNUMBER(2) PRIMARY KEY,
 3 PnameVARCHAR2(20),
 4 Plocation VARCHAR2(20),
 5 dnoNUMBER REFERENCES department(dnum)
 6 );

 SQL> INSERT INTO project VALUES(2,'Data Mining','Managluru',1);
 SQL> SELECT * FROMPROJECT;
 PNUMPNAME
 PLOCATION------------------------------------------------------------
 1 IOT
 Managluru
 2 Data Mining
 3 CC
 Managluru
 Hubli
 4 Image processing Managluru
 3
 DNO
 1
 1
 4
5 Research
 Managluru
 5

 SQL> CREATE TABLE workson (
 2 Eid NUMBER(5) REFERENCES employee(eid),
 3 Pno NUMBER(2) REFERENCES project(Pnum),
 4 hours NUMBER(5,2),
 5 primary key(Eid,Pno));

 SQL> INSERT INTO workson VALUES(1,1,4);
 SQL> SELECT * FROMWORKSON;
 EID
 PNO HOURS------------------------------
 1
 1
 2
 3
 4
 5
 1
 2
 3
 5
 4
 5
 4
 4
 4

 CREATE TABLE DEPENDENT(
 EMP_ID INT CONSTRAINT DEP_EMPID_PK PRIMARY KEY,
 DEPENDENT_NAME VARCHAR2(12),
 GENDERVARCHAR2(5),
 BDATE DATE,
 RELATIONSHIP VARCHAR2(12),
 FOREIGN KEY(EMP_ID)REFERENCES EMPLOYEE(EID) ON DELETE CASCADE
 );
 Query 1:Make a list of all project numbers for projects that involve an
 employee whose name is “Rahul”,either as a worker or as a manager
 of the department that controls the project.
 SQL> SELECT pno
 2 FROMworkson
 3 WHEREEidIN
 4 (SELECTEid FROMemployee WHERE name='Rahul')
 5 UNION
 6 SELECTPnum
 7 FROMproject
 8 WHEREdnoIN
 9 (SELECTDnumFROMdepartment WHERE DMgr_id IN
 (SELECT Eid FROM employee WHERE name='Rahul'));
PNO------
 1
 2
 4
 5
 Query2:Showtheresultingsalariesifeveryemployeeworkingonthe“IoT”project isgivena10
 percent
 raise.
 SQL>SELECTEid,name,salary,salary+0.1*salaryasupdated_salary
 2FROMemployee
 3WHEREEidIN
 4 (SELECTEidFROMworksonWHEREpnoIN(
 5 SELECTpnumFROMprojectWHEREPname='IOT'));
 EIDNAME SALARYUPDATED_SALARY------------------------------------------------------
 1Rahul 35000 38500
 2Sahana 35000 38500
 Query3:Findthe sumof the salariesofallemployees of the “Accounts”department, aswell
 asthe
 maximumsalary, theminimumsalary,andtheaveragesalaryinthisdepartment.
 SQL>SELECTSUM(salary),AVG(salary),MAX(salary),MIN(salary)
 2FROMemployeee,departmentd
 3WHEREd.dnum=e.dnoANDdname='Account';
 SUM(SALARY)AVG(SALARY)MAX(SALARY)MIN(SALARY)--------------------------------------------
 670000223333.333 600000 35000
 Query4:Retrievethenameofeachemployeewhoworkson
 all theprojectscontrolledbydepartmentnumber5(useNOTEXISTSoperator).
 SQL>SELECTEid,name
 2FROMemployeee
 3WHERENOTEXISTS(
 4 (SELECTpnumFROMprojectWHEREdno=5)MINUS
 5 (SELECTpnoFROMworksonwWHEREw.Eid=e.Eid)
 6 );
 EIDNAME------------------------------
 5Sajaan
QUERY5:Create a view Dept_info that gives details of department name,
 Number of employees and total salary of each department.
 SQL> Create view dept_info(name,count_emp,sum_sal) as
 2 Select d.dname, count(*), sum(salary)
 3 From department d inner join employee e
 4 ONe.Dno=d.Dnum
 5 Group by d.Dname;
 View created.
 SQL> SELECT * FROMDEPT_INFO;
 NAME
 COUNT_EMP SUM_SAL------------------------------
 ISE
 1 35000
 Account
 CSE
 3 670000
 1 3500

------------------------------------------------------

exp5:

CREATE TABLE FLIGHT(
 FLIGHT_NUM INT,
 SOURCEVARCHAR(20),
 DESTINATION VARCHAR(20),
 DISTANCE INT,
 DEPARTS VARCHAR(10),
 ARRIVES VARCHAR(10),
 PRICE INT,
 PRIMARY KEY (FLIGHT_NUM) );
 CREATE TABLE EMPLOYEES(
 EID INT,
 ENAMEVARCHAR(20),
 SALARY INT,
 PRIMARY KEY (EID) );
 CREATE TABLE AIRCRAFT(
 AID INT,
 ANAMEVARCHAR(20),
 CRUISINGRANGE INT,
PRIMARY KEY (AID) );
 CREATE TABLE CERTIFIED(
 EID INT,
 AID INT,
 PRIMARY KEY (EID,AID),
 FOREIGN KEY (EID) REFERENCES EMPLOYEES (EID),
 FOREIGN KEY (AID) REFERENCES AIRCRAFT (AID) );
 QUERY1:
 SQL>SELECTDISTINCTa.aname
 2 FROMaircrafta,certifiedc,employeese
 3 WHEREa.aid=c.aid
 4 ANDc.eid=e.eid
 5 ANDNOTEXISTS
 6 (SELECT*
 7 FROMemployeese1
 8 WHEREe1.eid=e.eid
 9 ANDe1.salary<80000);
 ANAME--------------------
 AIRBUS
 AIRCRAFT02
 BOEING
 JET01
 AIRBUS380
 QUERY2:
 SQL>SELECTc.eid,MAX(cruisingrange)
2 FROMcertifiedc,aircrafta
 3 WHEREc.aid=a.aid
 4 GROUPBYc.eid
 5 HAVINGCOUNT(*)>3;
 EIDMAX(CRUISINGRANGE)----------------------------
 1 8000
 QUERY3:
 SQL>SELECTDISTINCTe.ename
 FROMemployeese
 WHEREe.salary<=
 (SELECTMIN(f.price)
 FROMflight f
 WHEREf.Source='BANGALORE'
 ANDf.Destination='MUMBAI');
 ENAME--------------------
 AJAY
 QUERY4:
 SQL>SELECTa.aid
 FROMaircrafta
 WHEREa.cruisingrange>
 (SELECTMIN(f.distance)
 FROMflight f
 WHEREf.Source='BANGALORE'
 ANDf.Destination='DELHI');
 AID--------
378
 query5:
 SELECTename,salaryfromemployeeswheresalary=(selectMAX(salary)
 FROMemployees
 WHEREsalary<(selectmax(salary)fromemployees));
 ENAME SALARY------------------------------
 ARUN 9000
